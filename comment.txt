Дополнил бы пару нюансов:
1) Пока не сталкивался, но предвижу следующую проблему. Файл с матами придется бесконечно собирать и каждое слово прописывать в каждой словоформе. Тут сразу рекомендую освоить небольшой скрипт с помощью библиотеки pymorphy2

import pymorphy2
#так в Python создается обычная функция
def normal_mat(word:str):
    #в этом месте проводятся операции как в видео
    word = word.lower().translate(str.maketrans('','',string.punctuation))
    #здесь создается переменная класса. она нужна, чтобы спарсить слово в следующей строке
    morph = pymorphy2.MorphAnalyzer()
    """
    вот такой ответ будет на примере слова "дураки"
    [Parse(word='дураки', tag=OpencorporaTag('NOUN,anim,masc plur,nomn'), normal_form='дурак', score=1.0, methods_stack=((DictionaryAnalyzer(), 'дураки', 2, 6),))]
    {'дурак'}
    """
    parsed_token = morph.parse(word)
    #выводится нормальная форма. normal_form см. выше
    normal_form = parsed_token[0].normal_form
    return normal_form

и заменить часть кода в echo_send

if {normal_mat(i) for i in message.text.split(' ')}\

Вообще, это тоже не панацея, но хотя бы не придется записывать в файл матов полный список:
мат
мата
мату
мат
матом
мате
А не панацея, т.к. во время написания кода проблема со словом "матища" не разрешилась, т.к. pymorphy2 посчитал это нормальной формой слова
Хотя, если очень хочется то вот: 
http://py7.ru/tools/morph/
Приводит все формы с помощью Python :=)

2) К примеру фраза "тымат" не будет отфильтрована скриптом, потому что split делит по пробелам. Впрочем, проблемка-то шире, ведь если допустим искать подстроку в присланном сообщении, то можно легко посчитать слова "оскоблять" за матерное.